var documenterSearchIndex = {"docs":
[{"location":"References/#References","page":"References","title":"References","text":"","category":"section"},{"location":"References/","page":"References","title":"References","text":"","category":"page"},{"location":"indexpage/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"indexpage/","page":"Index","title":"Index","text":"","category":"page"},{"location":"PALEOocean functions/#PALEOocean-functions","page":"PALEOocean functions","title":"PALEOocean functions","text":"","category":"section"},{"location":"PALEOocean functions/","page":"PALEOocean functions","title":"PALEOocean functions","text":"Helper functions for use by Reactions.","category":"page"},{"location":"PALEOocean functions/","page":"PALEOocean functions","title":"PALEOocean functions","text":"CurrentModule = PALEOocean.Ocean","category":"page"},{"location":"PALEOocean functions/#Configuring-Domains-and-Variables","page":"PALEOocean functions","title":"Configuring Domains and Variables","text":"","category":"section"},{"location":"PALEOocean functions/","page":"PALEOocean functions","title":"PALEOocean functions","text":"set_model_domains\nfind_transport_vars","category":"page"},{"location":"PALEOocean functions/#PALEOocean.Ocean.set_model_domains","page":"PALEOocean functions","title":"PALEOocean.Ocean.set_model_domains","text":"set_model_domains(model::PB.Model, oceangrid, surfacegrid, floorgrid)\n\nSet model Domain sizes and Subdomains for ocean, oceansurface, oceanfloor Domains. (Helper function for a Reaction implementing ocean transport.)\n\n\n\n\n\n","category":"function"},{"location":"PALEOocean functions/#PALEOocean.Ocean.find_transport_vars","page":"PALEOocean functions","title":"PALEOocean.Ocean.find_transport_vars","text":"find_transport_vars(domain::PB.AbstractDomain; transport_input_components=false) \n    -> (conc_vars, sms_vars, input_components, num_components)\n\nFind all variables in domain with attribute :advect == true, and then use naming convention <rootname>_conc to identify <rootname>_sms Variables to add transport flux to.\n\nIf transport_input_components = true, also define input_components as <varname>_transport_input to calculate advective transport input into each cell (slow)\n\n\n\n\n\n","category":"function"},{"location":"PALEOocean functions/#Constructing-and-using-transport-matrices","page":"PALEOocean functions","title":"Constructing and using transport matrices","text":"","category":"section"},{"location":"PALEOocean functions/","page":"PALEOocean functions","title":"PALEOocean functions","text":"add_loop!\nprepare_transport\ndo_transport\ndo_transport_tr","category":"page"},{"location":"PALEOocean functions/#PALEOocean.Ocean.add_loop!","page":"PALEOocean functions","title":"PALEOocean.Ocean.add_loop!","text":"add_loop!(A::AbstractMatrix, vm::AbstractVector, L::Real, loopindices)\n\nAdd circulation with flux L to transport matrix A, around a closed loop loopindices.\n\nTransport matrix A (s^{-1}) represents tracer transport,\n\ndc/dt = A * c\n\nwhere c is Vector of tracer concentrations\n\nloopindices is a list of cell indices representing a closed loop, eg [2, 3, 4, 2]\n\nUnits for tracers and fluxes are:\n\nOcean / volume based:\nc:  mol m-3 tracer concentration\nvm: m^3. volume per cell\nL:  m^3 s-1 (volume flux, cf 1 Sverdrup = 1e6 m^3 s-1)\nAtmosphere / mass based\nc:  kg / total kg, tracer mass mixing ratio \nvm: kg, total mass per call\nL:  kg s-1 (mass flux)\n\n\n\n\n\n","category":"function"},{"location":"PALEOocean functions/#PALEOocean.Ocean.prepare_transport","page":"PALEOocean functions","title":"PALEOocean.Ocean.prepare_transport","text":"prepare_transport(m::ReactionMethod, (grid_vars, conc_components, sms_components, input_components)) -> \n    (grid_vars, conc_components, sms_components, input_components, buffer)\n\nAdd an additional buffer for do_transport. conc_components, sms_components, optional input_components are Vectors of data Arrays (as created by VarList_components from lists generated by find_transport_vars).\n\n\n\n\n\n","category":"function"},{"location":"PALEOocean functions/#PALEOocean.Ocean.do_transport","page":"PALEOocean functions","title":"PALEOocean.Ocean.do_transport","text":"do_transport(grid_vars, conc_components, sms_components, input_components, buffer, dtm::AbstractMatrix, cr::AbstractCellRange)\n\nCalculate transport rates. \n\nArguments\n\ngrid_vars, conc_components, sms_components, input_components:  Vectors of data Arrays (created by VarList_components)\nbuffer: buffer arrays created by prepare_transport\ndtm::AbstractMatrix: transport matrix (units yr-1)\n\n\n\n\n\n","category":"function"},{"location":"PALEOocean functions/#PALEOocean.Ocean.do_transport_tr","page":"PALEOocean functions","title":"PALEOocean.Ocean.do_transport_tr","text":"do_transport_tr(grid_vars, conc_components, sms_components, input_components, buffer, \n    dtm_tr::SparseArrays.SparseMatrixCSC, cr::PB.AbstractCellRange)\n\ndo_transport_tr(grid_vars, conc_components, sms_components, input_components, buffer,\n    colptr, rowval, (nzval1, nzval2), (wt1, wt2), cr::PB.AbstractCellRange)\n\nMemory-bandwidth optimised version of do_transport using transposed matrix dtm_tr. This is an optimisation specifically tied to the Compressed Sparse Column storage layout (Julia SparseMatrixCSC).\n\nIf two matrices are supplied with a common sparsity pattern specified by colptr, rowptr, applies a linear combination with (wt1, wt2)\n\n\n\n\n\nOptimized SIMD transport matrix x contiguous packed conc data array\n\n\n\n\n\n","category":"function"},{"location":"PALEOocean functions/#Optimized-transport-using-transport-matrices-with-a-common-sparsity-pattern","page":"PALEOocean functions","title":"Optimized transport using transport matrices with a common sparsity pattern","text":"","category":"section"},{"location":"PALEOocean functions/","page":"PALEOocean functions","title":"PALEOocean functions","text":"TrsptCSC\ncreate_common_sparsity_tr!","category":"page"},{"location":"PALEOocean functions/#PALEOocean.Ocean.TrsptCSC","page":"PALEOocean functions","title":"PALEOocean.Ocean.TrsptCSC","text":"TrsptCSC\n\nStore multiple SparseArrays.SparseMatrixCSC with a common sparsity pattern.\n\nThis allows fast interpolation for eg a time-series of transport matrices over a seasonal cycle.\n\nSparseMatrixCSC format, except with a Vector of nzval, ie:\n\ncolptr: Column j is in colptr[j]:(colptr[j+1]-1)\nrowval: Row indices of stored values\nnzval: Vector of Vector of non-zero values\n\n\n\n\n\n","category":"type"},{"location":"PALEOocean functions/#PALEOocean.Ocean.create_common_sparsity_tr!","page":"PALEOocean functions","title":"PALEOocean.Ocean.create_common_sparsity_tr!","text":"create_common_sparsity_tr!(a_matrices; do_transpose, TMeltype=Float64) -> TrsptCSC\n\nReduce a collection of matrices to common sparsity pattern, optionally transposing.\n\nNB: a_matrices is used as workspace and contents deleted.\n\n\n\n\n\n","category":"function"},{"location":"PALEOocean functions/#Optimized-transport-using-SIMD-packed-vectors","page":"PALEOocean functions","title":"Optimized transport using SIMD packed vectors","text":"","category":"section"},{"location":"PALEOocean functions/","page":"PALEOocean functions","title":"PALEOocean functions","text":"PackedBuffer","category":"page"},{"location":"PALEOocean functions/#PALEOocean.Ocean.PackedBuffer","page":"PALEOocean functions","title":"PALEOocean.Ocean.PackedBuffer","text":"PackedBuffer\n\nBuffer Arrays for optimized SIMD transport using elements of type SIMD.Vec{pack_chunk_width, pack_eltype}. Creates packed_conc_array for packed and padded Variable concentrations, and an additional workspace buffer. Uses additional type parameters to allow do_transport_tr specialization on number of Variable components etc as well as SIMD chunk width.\n\n\n\n\n\n","category":"type"},{"location":"collated_examples/transport_examples/README/#Transport-examples","page":"Transport examples","title":"Transport examples","text":"","category":"section"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"PALEOocean/examples/transport_examples contains two examples showing the construction of (ocean) transport matrices, using PALEOocean.Ocean.add_loop! to construct a transport matrix by adding circulation around closed loops.","category":"page"},{"location":"collated_examples/transport_examples/README/#Advection","page":"Transport examples","title":"Advection","text":"","category":"section"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"julia> include(\"PALEO_examples_transport_advect.jl\")","category":"page"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"This uses TransportExamples.ReactionTransportAdvectExample defined in TransportExamples.jl to construct a transport matrix with a closed loop circulation down the first column and up the second column of a column-based model.","category":"page"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"(Image: Tracer advection image)","category":"page"},{"location":"collated_examples/transport_examples/README/#Figure-1","page":"Transport examples","title":"Figure 1","text":"","category":"section"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"Closed loop circulation down col :a and up column :b resulting in advection of a tracer T down column :a and up column b:.  Area of :a is 10x that of :b, hence the advection velocity in :b is 10x that in :a.  NB: advection using CVODE, an implicit stiff ODE integrator, is quite diffusive","category":"page"},{"location":"collated_examples/transport_examples/README/#Diffusion","page":"Transport examples","title":"Diffusion","text":"","category":"section"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"julia> include(\"PALEO_examples_transport_diffuse.jl\")","category":"page"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"This uses TransportExamples.ReactionTransportDiffuseExample defined in TransportExamples.jl to construct a transport matrix with constant vertical diffusivity Kz.","category":"page"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"(Image: Tracer diffusion image)","category":"page"},{"location":"collated_examples/transport_examples/README/#Figure-2","page":"Transport examples","title":"Figure 2","text":"","category":"section"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"Constant diffusivity Kz columns :a and :b.  Cell thickness in :b is 10x that of :a","category":"page"},{"location":"collated_examples/transport_examples/README/#Additional-Reactions","page":"Transport examples","title":"Additional Reactions","text":"","category":"section"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"CurrentModule = TransportExamples","category":"page"},{"location":"collated_examples/transport_examples/README/","page":"Transport examples","title":"Transport examples","text":"ReactionTransportAdvectExample\nReactionTransportDiffuseExample","category":"page"},{"location":"collated_examples/transport_examples/README/#Main.TransportExamples.ReactionTransportAdvectExample","page":"Transport examples","title":"Main.TransportExamples.ReactionTransportAdvectExample","text":"ReactionTransportAdvectExample\n\nAdvection around two columns\n\nParameters\n\nT[Float64]=2.0e7  (m^3 s^-1), default_value=2.0e7, description=\"advective flux\"\n\n\n\n\n\n","category":"type"},{"location":"collated_examples/transport_examples/README/#Main.TransportExamples.ReactionTransportDiffuseExample","page":"Transport examples","title":"Main.TransportExamples.ReactionTransportDiffuseExample","text":"ReactionTransportDiffuseExample\n\nEddy diffusion N columns\n\nParameters\n\nKz[Float64]=1.0e-5  (m^2 s^-1), default_value=1.0e-5, description=\"eddy diffusivity\"\n\n\n\n\n\n","category":"type"},{"location":"PALEOocean Reactions/#PALEOocean-Reactions","page":"PALEOocean Reactions","title":"PALEOocean Reactions","text":"","category":"section"},{"location":"PALEOocean Reactions/","page":"PALEOocean Reactions","title":"PALEOocean Reactions","text":"CurrentModule = PALEOocean.Ocean","category":"page"},{"location":"PALEOocean Reactions/#Ocean-geometry-and-transport","page":"PALEOocean Reactions","title":"Ocean geometry and transport","text":"","category":"section"},{"location":"PALEOocean Reactions/","page":"PALEOocean Reactions","title":"PALEOocean Reactions","text":"OceanNoTransport.ReactionOceanNoTransport","category":"page"},{"location":"PALEOocean Reactions/#PALEOocean.Ocean.OceanNoTransport.ReactionOceanNoTransport","page":"PALEOocean Reactions","title":"PALEOocean.Ocean.OceanNoTransport.ReactionOceanNoTransport","text":"ReactionOceanNoTransport\n\nN ocean boxes (default N=1 ie a single 0-D box), each with a surface and floor, no transport.\n\nParameters\n\narea[Vector{Float64}]=[1.0]  (m^2), default_value=[1.0], description=\"surface / floor area (per box)\"\ndepth[Vector{Float64}]=[1.0]  (m), default_value=[1.0], description=\"depth (per box)\"\n\nMethods and Variables\n\ndo_setup_grid\nvolume  (m^3), VT_ReactProperty, description=\"volume of ocean cells\"\nvolume_total  (m^3), VT_ReactProperty, description=\"total volume of ocean cells\"\nAbox  (m^2), VT_ReactProperty, description=\"horizontal area of box\"\nzupper  (m), VT_ReactProperty, description=\"depth of upper surface of box (m)  0 is surface, -100 is depth of 100 m\"\nzlower  (m), VT_ReactProperty, description=\"depth of lower surface of box (m)\"\nzmid  (m), VT_ReactProperty, description=\"mean depth of box\"\nrho_ref  (kg m^-3), VT_ReactProperty, description=\"Ocean transport model density conversion factor (NB: this an artificial model quantity determined by the offline model for tracer transport, and may be distinct from physical ocean density, and from any density anomaly / potl density used by the offline physical model)\"\npressure  (dbar), VT_ReactProperty, description=\"Ocean pressure\"\nAfloor –> oceanfloor.Afloor  (m^2), VT_ReactProperty, description=\"horizontal area of seafloor at base of box\"\nAfloor_total –> oceanfloor.Afloor_total  (m^2), VT_ReactProperty, description=\"total area of seafloor\"\nzfloor –> oceanfloor.zfloor  (m), VT_ReactProperty, description=\"depth of ocean floor (m, -ve)\"\nAsurf –> oceansurface.Asurf  (m^2), VT_ReactProperty, description=\"horizontal area of oceansurface\"\n\n\n\n\n\n","category":"type"},{"location":"#PALEOocean.jl-documentation","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"","category":"section"},{"location":"#Installation-and-running-the-model","page":"PALEOocean.jl documentation","title":"Installation and running the model","text":"","category":"section"},{"location":"#Installation","page":"PALEOocean.jl documentation","title":"Installation","text":"","category":"section"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"NB: requires Julia 1.6 or later.  To check the Julia version:","category":"page"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"julia> versioninfo()","category":"page"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"Clone this github repository to local directory PALEOocean: from a linux bash prompt or a Windows terminal,","category":"page"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"$ git clone https://github.com/PALEOtoolkit/PALEOocean.jl.git PALEOcopse","category":"page"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"Start julia and navigate to the PALEOocean/examples folder, and run setup.jl to configure the PALEOocean/examples Julia environment to use the local (downloaded) version of the PALEOocean package:","category":"page"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"julia> cd(\"PALEOocean/examples\")\njulia> include(\"setup.jl\") # use the local version of PALEOocean packages to allow local modifications","category":"page"},{"location":"#Running-a-minimal-transport-example","page":"PALEOocean.jl documentation","title":"Running a minimal transport example","text":"","category":"section"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"Start julia and navigate to the PALEOocean folder, then:","category":"page"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"julia> cd(\"examples/transport_examples\")\njulia> import Pkg\njulia> Pkg.activate(\"..\") # use the PALEOocean/examples environment\n\njulia> include(\"PALEO_examples_transport_advect.jl\")","category":"page"},{"location":"#Using-PALEOocean-Reactions-from-other-models","page":"PALEOocean.jl documentation","title":"Using PALEOocean Reactions from other models","text":"","category":"section"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"The PALEO Reactions comprising the PALEOocean models are available when the registered PALEOocean package is loaded (without downloading the repository), ie","category":"page"},{"location":"","page":"PALEOocean.jl documentation","title":"PALEOocean.jl documentation","text":"julia> Pkg.add(\"PALEOocean\")\njulia> import PALEOocean","category":"page"}]
}
